(window.webpackJsonp=window.webpackJsonp||[]).push([[89],{548:function(s,t,n){"use strict";n.r(t);var a=n(18),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"定义组件的几种不同方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义组件的几种不同方式"}},[s._v("#")]),s._v(" 定义组件的几种不同方式")]),s._v(" "),n("h2",{attrs:{id:"使用-options-apis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-options-apis"}},[s._v("#")]),s._v(" 使用 Options APIs")]),s._v(" "),n("ul",[n("li",[s._v("组件仍然可以使用以前的方式定义（导出组件选项对象，或者使用 Vue.extend()）")]),s._v(" "),n("li",[s._v("但是当我们导出的是一个普通的对象，此时 TypeScript 无法推断出对应的类型，")]),s._v(" "),n("li",[s._v("至于 VSCode 可以推断出类型成员的原因是因为我们使用了 Vue 插件，")]),s._v(" "),n("li",[s._v("这个插件明确知道我们这里导出的是一个 Vue 对象。")]),s._v(" "),n("li",[s._v("所以我们必须使用 Vue.extend() 方法确保 TypeScript 能够有正常的类型推断")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Vue "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'vue'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),s._v(" Vue"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("extend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Button'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      count"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  methods"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("increment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("count"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h2",{attrs:{id:"使用-class-apis"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-class-apis"}},[s._v("#")]),s._v(" 使用 Class APIs")]),s._v(" "),n("p",[s._v("在 TypeScript 下，Vue 的组件可以使用一个继承自 Vue 类型的子类表示，这种类型需要使用 Component 装饰器去修饰")]),s._v(" "),n("blockquote",[n("p",[s._v("装饰器是 ES 草案中的一个新特性，提供一种更好的面向切面编程的体验，不过这个草案最近有可能发生重大调整，所以个人并不推荐。")])]),s._v(" "),n("p",[s._v("装饰器函数接收的参数就是以前的组件选项对象（data、props、methods 之类）")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import Vue from 'vue';\nimport Component from 'vue-class-component';\n\n@Component({\n  props: {\n    size: String,\n  },\n})\nexport default class Button extends Vue {\n  private count: number = 1;\n  private text: string = 'Click me';\n\n  get content() {\n    return `${this.text} ${this.count}`;\n  }\n\n  increment() {\n    this.count++;\n  }\n\n  mounted() {\n    console.log('button is mounted');\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("ul",[n("li",[s._v("Data: 使用类的实例属性声明")]),s._v(" "),n("li",[s._v("Method: 使用类的实例方法声明")]),s._v(" "),n("li",[s._v("Computed: 使用 Getter 属性声明")]),s._v(" "),n("li",[s._v("生命周期: 使用类的实例方法声明")])]),s._v(" "),n("p",[s._v("其它特性：例如 components, props, filters, directives 之类的，则需要使用修饰器参数传入")]),s._v(" "),n("p",[s._v("使用这种 class 风格的组件声明方式并没有什么特别的好处，只是为了提供给开发者多种编码风格的选择性")]),s._v(" "),n("h2",{attrs:{id:"使用-class-apis-vue-property-decorator"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用-class-apis-vue-property-decorator"}},[s._v("#")]),s._v(" 使用 Class APIs + vue-property-decorator")]),s._v(" "),n("p",[s._v("这种方式继续放大了 class 这种组件定义方法。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import { Vue, Component, Prop } from 'vue-property-decorator'\n\n@Component\nexport default class Button extends Vue {\n  private count: number = 1\n  private text: string = 'Click me'\n  @Prop() readonly size?: string\n\n  get content () {\n    return `${this.text} ${this.count}`\n  }\n\n  increment () {\n    this.count++\n  }\n\n  mounted () {\n    console.log('button is mounted')\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"个人最佳实践"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#个人最佳实践"}},[s._v("#")]),s._v(" 个人最佳实践")]),s._v(" "),n("p",[s._v("No Class APIs，只用 Options APIs。")]),s._v(" "),n("p",[s._v("使用 Options APIs 最好是使用 export default Vue.extend({ ... }) 而不是 export default { ... }。")]),s._v(" "),n("p",[s._v("其实 Vue.js 3.x 早期是想要放弃 Class APIs 的，不过无奈想要兼容，所以才保留下来了。")]),s._v(" "),n("h2",{attrs:{id:"相关扩展"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#相关扩展"}},[s._v("#")]),s._v(" 相关扩展")]),s._v(" "),n("p",[s._v("插件的类型扩展，使用类型补充声明")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import { AxiosInstance } from 'axios'\n\ndeclare module 'vue/types/vue' {\n  interface Vue {\n    readonly $api: AxiosInstance\n  }\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("JavaScript 项目中如何有更好的类型提示：JSDoc + import-types")]),s._v(" "),n("p",[s._v("https://www.typescriptlang.org/docs/handbook/type-checking-javascript-files.html")]),s._v(" "),n("p",[s._v("https://www.typescriptlang.org/play/index.html?useJavaScript=truee=4#example/jsdoc-support")])])}),[],!1,null,null,null);t.default=e.exports}}]);