(window.webpackJsonp=window.webpackJsonp||[]).push([[134],{595:function(t,l,n){"use strict";n.r(l);var r=n(18),e=Object(r.a)({},(function(){var t=this,l=t.$createElement,n=t._self._c||l;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"插件-plugins"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#插件-plugins"}},[t._v("#")]),t._v(" 插件(Plugins)")]),t._v(" "),n("p",[t._v("目前为止，我们通过相对路径，将一个入口文件和一个模块创建成了一个简单的 bundle。随着构建更复杂的 bundle，通常需要更大的灵活性——引入 npm 安装的模块、通过 Babel 编译代码、和 JSON 文件打交道等。")]),t._v(" "),n("p",[t._v("为此，我们可以用 插件(plugins) 在打包的关键过程中更改 Rollup 的行为。the Rollup wiki 维护了可用的插件列表。")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",[t._v("plugin")]),t._v(" "),n("th",[t._v("描述")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[n("a",{attrs:{href:"./w-001-rollup-plugin-json"}},[t._v("@rollup/plugin-json")])]),t._v(" "),n("td",[t._v("将.json 文件转换为 ES6 模块，使 rollup 可以从 JSON 文件中读取数据")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:"./w-002-rollup-plugin-node-resolve"}},[t._v("@rollup/plugin-node-resolve")])]),t._v(" "),n("td",[t._v("告诉 Rollup 如何查找外部模块")])]),t._v(" "),n("tr",[n("td",[n("a",{attrs:{href:""}},[t._v("@rollup/plugin-commonjs")])]),t._v(" "),n("td",[t._v("用于将 CommonJS 模块转换为 ES6")])])])])])}),[],!1,null,null,null);l.default=e.exports}}]);