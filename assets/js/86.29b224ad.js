(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{544:function(s,a,t){"use strict";t.r(a);var n=t(18),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"类型系统"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型系统"}},[s._v("#")]),s._v(" 类型系统")]),s._v(" "),t("h2",{attrs:{id:"强类型语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强类型语言"}},[s._v("#")]),s._v(" 强类型语言")]),s._v(" "),t("p",[s._v("强类型指的是程序中表达的任何对象所从属的类型都必须能在编译时刻确定。")]),s._v(" "),t("p",[s._v("对于强类型语言，一个变量不经过强制转换，它永远是这个数据类型，不允许隐式的类型转换。")]),s._v(" "),t("blockquote",[t("p",[s._v("假设定义了一个 double 类型变量 a，不经过强制类型转换那么程序 int b = a 是无法通过编译。")])]),s._v(" "),t("div",{staticClass:"language-Java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 编译失败")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"强类型的优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强类型的优点"}},[s._v("#")]),s._v(" 强类型的优点")]),s._v(" "),t("ul",[t("li",[s._v("编译时刻能检查出错误的类型匹配，以提高程序的安全性；")]),s._v(" "),t("li",[s._v("可以根据对象类型优化相应运算，以提高目标代码的质量；")]),s._v(" "),t("li",[s._v("重构更牢靠；")]),s._v(" "),t("li",[s._v("减少运行时不必要的类型判断。")])]),s._v(" "),t("h2",{attrs:{id:"弱类型语言"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#弱类型语言"}},[s._v("#")]),s._v(" 弱类型语言")]),s._v(" "),t("p",[s._v("弱类型语言允许变量类型的隐式转换，允许强制类型转换等，如字符串和数值可以自动转化")]),s._v(" "),t("div",{staticClass:"language-javascript line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-javascript"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'100'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 50 将a隐式转换为Number")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 10050 将b隐式转换为String")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h2",{attrs:{id:"静态类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态类型"}},[s._v("#")]),s._v(" 静态类型")]),s._v(" "),t("p",[s._v("静态类型语言中，变量的类型必须先声明，即在创建的那一刻就已经确定好变量的类型，而后的使用中，你只能将这一指定类型的数据赋值给变量。如果强行将其他不相干类型的数据赋值给它，就会引发错误。")]),s._v(" "),t("h2",{attrs:{id:"动态类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#动态类型"}},[s._v("#")]),s._v(" 动态类型")]),s._v(" "),t("p",[s._v("动态类型语言中，变量的类型可以随时改变。")])])}),[],!1,null,null,null);a.default=e.exports}}]);