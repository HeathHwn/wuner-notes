(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{510:function(t,r,a){"use strict";a.r(r);var e=a(18),s=Object(e.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"函数式编程与-js-异步编程、手写-promise"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程与-js-异步编程、手写-promise"}},[t._v("#")]),t._v(" 函数式编程与 JS 异步编程、手写 Promise")]),t._v(" "),a("h2",{attrs:{id:"函数式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程"}},[t._v("#")]),t._v(" 函数式编程")]),t._v(" "),a("h3",{attrs:{id:"什么是函数式编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是函数式编程"}},[t._v("#")]),t._v(" 什么是函数式编程")]),t._v(" "),a("p",[t._v("函数式编程(Functional Programming, FP)，FP 是编程范式之一，我们常听说的编程范式还有面向过程编程、面向对象编程。")]),t._v(" "),a("h3",{attrs:{id:"面向对象编程的思维方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向对象编程的思维方式"}},[t._v("#")]),t._v(" 面向对象编程的思维方式")]),t._v(" "),a("p",[t._v("把现实世界中的事物抽象成程序世界中的类和对象，通过封装、继承和多态来演示事物事件的联系")]),t._v(" "),a("h3",{attrs:{id:"函数式编程的思维方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数式编程的思维方式"}},[t._v("#")]),t._v(" 函数式编程的思维方式")]),t._v(" "),a("p",[t._v("把现实世界的事物和事物之间的联系抽象到程序世界（对运算过程进行抽象）")]),t._v(" "),a("h4",{attrs:{id:"程序的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#程序的本质"}},[t._v("#")]),t._v(" 程序的本质")]),t._v(" "),a("blockquote",[a("p",[t._v("根据输入通过某种运算获得相应的输出，程序开发过程中会涉及很多有输入和输出的函数， x -> f(联系、映射) -> y，y=f(x)")])]),t._v(" "),a("blockquote",[a("p",[t._v("函数式编程中的函数指的不是程序中的函数(方法)，而是数学中的函数即映射关系，例如：y = sin(x)，x 和 y 的关系")])]),t._v(" "),a("blockquote",[a("p",[t._v("相同的输入始终要得到相同的输出(纯函数)")])]),t._v(" "),a("blockquote",[a("p",[t._v("函数式编程用来描述数据(函数)之间的映射")])]),t._v(" "),a("h2",{attrs:{id:"目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"w-001-first-class-function"}},[t._v("函数是一等公民(First-class Function)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-002-higher-order-function"}},[t._v("高阶函数(Higher-order function)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-003-closure"}},[t._v("闭包(Closure)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-004-pure-functions"}},[t._v("纯函数(Pure Functions)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-005-curry"}},[t._v("柯里化 (Haskell Brooks Curry)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-006-compose"}},[t._v("函数组合(compose)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-007-point-free"}},[t._v("Point Free")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-008-functor"}},[t._v("函子(Functor)")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-009-maybe"}},[t._v("MayBe 函子")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-010-either"}},[t._v("Either 函子")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-011-io"}},[t._v("IO 函子")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-012-task"}},[t._v("Task 函子")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-013-monad"}},[t._v("Monad 函子")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-014-asynchronous"}},[t._v("Asynchronous 异步")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-015-synchronous"}},[t._v("Synchronous 同步")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-016-promise"}},[t._v("Promise")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-017-generator"}},[t._v("Generator （生成器）")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-018-async-await"}},[t._v("Async 函数")])])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"w-019-my-promise"}},[t._v("手写 Promise")])])])]),t._v(" "),a("h2",{attrs:{id:"附录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://llh911001.gitbooks.io/mostly-adequate-guide-chinese/content/ch1.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数式编程指北"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/02/fp-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数式编程入门"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2017/03/pointfree.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pointfree 编程风格指南"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2015/07/monad.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解 Monad"),a("OutboundLink")],1)])]),t._v(" "),a("li",[a("p",[a("a",{attrs:{href:"http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Functors, Applicatives, And Monads In Pictures"),a("OutboundLink")],1)])])])])}),[],!1,null,null,null);r.default=s.exports}}]);