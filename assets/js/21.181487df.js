(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{477:function(e,v,_){e.exports=_.p+"assets/img/1.bf06ea3b.png"},478:function(e,v,_){e.exports=_.p+"assets/img/2.b5fe9c4d.png"},479:function(e,v,_){e.exports=_.p+"assets/img/3.2040e73a.png"},672:function(e,v,_){"use strict";_.r(v);var t=_(18),s=Object(t.a)({},(function(){var e=this,v=e.$createElement,t=e._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"vite"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite"}},[e._v("#")]),e._v(" Vite")]),e._v(" "),t("h2",{attrs:{id:"概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),t("ul",[t("li",[e._v("Vite 是一个面向现代浏览器的一个更轻、更快的 Web 应用开发工具")]),e._v(" "),t("li",[e._v("它基于 ECMAScript 标准的原生模块系统（ES Modules）实现")])]),e._v(" "),t("h2",{attrs:{id:"目的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[e._v("#")]),e._v(" 目的")]),e._v(" "),t("ul",[t("li",[e._v("它的出现是为了解决 webpack 在开发阶段使用 webpack-dev-server 冷启动时间过长，以及 webpack HMR 热更新反应速度慢的问题。")]),e._v(" "),t("li",[e._v("使用 Vite 创建的项目，就是一个普通的 Vue 3 的应用。项目基于 Vue CLI 创建的项目少了很多的配置文件和依赖。")])]),e._v(" "),t("h2",{attrs:{id:"项目依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#项目依赖"}},[e._v("#")]),e._v(" 项目依赖")]),e._v(" "),t("ul",[t("li",[e._v("Vite\n"),t("ul",[t("li",[e._v("目前只支持 "),t("code",[e._v("Vue 3.x")]),e._v(" 版本，创建项目是通过指定不同的模板，也可以使用不同的框架")])])]),e._v(" "),t("li",[e._v("@vue/compiler-sfc 编译 "),t("code",[e._v(".vue")]),e._v(" 单文件组件\n"),t("ul",[t("li",[t("code",[e._v("Vue 2.x")]),e._v(" 中使用的是 "),t("code",[e._v("vue-template-compiler")])])])])]),e._v(" "),t("h2",{attrs:{id:"开箱即用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开箱即用"}},[e._v("#")]),e._v(" 开箱即用")]),e._v(" "),t("p",[e._v("Vite 创建的项目几乎不需要额外的配置。")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("TypeScript")]),e._v(" - 内置支持")]),e._v(" "),t("li",[t("code",[e._v("css")]),e._v(" 的与编译器 - 内置支持（需要单独安装对应的编译器）")]),e._v(" "),t("li",[t("code",[e._v("less/sass/stylus/postcss")])]),e._v(" "),t("li",[t("code",[e._v("JSX")])]),e._v(" "),t("li",[t("code",[e._v("Web Assembly")])])]),e._v(" "),t("h2",{attrs:{id:"特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[e._v("#")]),e._v(" 特性")]),e._v(" "),t("p",[t("code",[e._v("Vite")]),e._v(" 带来的优势主要体现在开发者在开发过程中的体验。")]),e._v(" "),t("ul",[t("li",[e._v("按需编译\n"),t("ul",[t("li",[e._v("所需的文件按需编译，避免编译用不到的文件，也没有将模块打包到一起的过程。")])])]),e._v(" "),t("li",[e._v("快速冷启动\n"),t("ul",[t("li",[e._v("基于浏览器原生 "),t("code",[e._v("ES imports")]),e._v("，直接使用 "),t("code",[e._v('<script type="module">')]),e._v(" 加载入口文件，不需要等待模块打包的过程，可以立即启动。")])])]),e._v(" "),t("li",[e._v("模块热更新\n"),t("ul",[t("li",[e._v("几乎是实时的，由于模块不是打包到一起的，并且是基于 "),t("code",[e._v("ES imports")]),e._v(" 按需编译的，所以只需要更新修改的模块即可。")])])]),e._v(" "),t("li",[e._v("开箱即用\n"),t("ul",[t("li",[e._v("避免各种 "),t("code",[e._v("loader")]),e._v(" 和 "),t("code",[e._v("plugin")]),e._v(" 的配置。")])])])]),e._v(" "),t("h2",{attrs:{id:"hmr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmr"}},[e._v("#")]),e._v(" HMR")]),e._v(" "),t("p",[e._v("Vite 的热更新原理和 webpack-dev-server 一样，都是使用了 WebSocket（即时通讯）在本地服务端和客户端建立双向通信。")]),e._v(" "),t("p",[e._v("在服务端监听文件变化，一旦文件发生变化，通过 WebSocket 发送给客户端。")]),e._v(" "),t("p",[e._v("客户端通过 WebSocket 监听了一些更新的类型。")]),e._v(" "),t("p",[e._v("当接收到服务端 WebSocket 推送过来的数据，就会像事件一样触发，更新对应的资源。")]),e._v(" "),t("h2",{attrs:{id:"基础使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[e._v("#")]),e._v(" 基础使用")]),e._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 启动开发 Web 服务器")]),e._v("\nvite or vite serve\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 打包")]),e._v("\nvite build\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br")])]),t("h2",{attrs:{id:"vite-和-vue-cli-service-对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-和-vue-cli-service-对比"}},[e._v("#")]),e._v(" Vite 和 vue-cli-service 对比")]),e._v(" "),t("ul",[t("li",[e._v("vue-cli-service\n"),t("ul",[t("li",[e._v("像 webpack 这类工具的做法是将所有的模块提前编译，打包进 bundle 里。")]),e._v(" "),t("li",[e._v("也就是，不管模块是否被执行、使用，都要被编译打包到 bundle 里。")]),e._v(" "),t("li",[e._v("随着项目越来越大，打包后的 bundle 也越来越大，打包的速度自然越来越慢。")])])]),e._v(" "),t("li",[e._v("Vite\n"),t("ul",[t("li",[e._v("Vite 利用现代浏览器原生支持的 ES Module 模块化的特性，省略了对模块的打包。")]),e._v(" "),t("li",[e._v("对于需要编译的文件，比如单文件组件、样式模块等，Vite 采用另一种模式 - 即时编译。")]),e._v(" "),t("li",[e._v("即具体请求某个文件的时候，才会在服务端编译这个文件。")]),e._v(" "),t("li",[e._v("这种即时编译的好处，主要体现在按需编译，速度会更快。")])])])]),e._v(" "),t("h3",{attrs:{id:"vite-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vite-2"}},[e._v("#")]),e._v(" Vite")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Vite")]),e._v(" 在运行 "),t("code",[e._v("vite serve")]),e._v(" 的时候不需要打包，直接开启一个 "),t("code",[e._v("web")]),e._v(" 服务器。")]),e._v(" "),t("li",[e._v("当浏览器请求服务器，例如请求一个单文件组件，这个时候在服务器端编译单文件组件，然后把编译的结果返回给浏览器。")]),e._v(" "),t("li",[e._v("模块的处理和编译是在服务器端。")])]),e._v(" "),t("p",[t("img",{attrs:{src:_(477),alt:"notes"}})]),e._v(" "),t("h3",{attrs:{id:"vue-cli-service"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#vue-cli-service"}},[e._v("#")]),e._v(" vue-cli-service")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Vue Cli")]),e._v(" 在运行 "),t("code",[e._v("vue-cli-service serve")]),e._v(" 的时候，内部会使用 "),t("code",[e._v("webpack")]),e._v(" 首先打包所有的模块，如果模块非常多，将导致打包速度非常慢。")]),e._v(" "),t("li",[e._v("把打包的结果存储到内存中，然后才会开启开发的 web 服务器。")]),e._v(" "),t("li",[e._v("浏览器请求 "),t("code",[e._v("web")]),e._v(" 服务器，把内存中打包的结果直接返回给浏览器。")])]),e._v(" "),t("p",[t("img",{attrs:{src:_(478),alt:"notes"}})]),e._v(" "),t("h2",{attrs:{id:"hmr-对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hmr-对比"}},[e._v("#")]),e._v(" HMR 对比")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Vite HMR")]),e._v(" "),t("ul",[t("li",[e._v("只需立即编译当前所修改的文件")])])]),e._v(" "),t("li",[t("code",[e._v("Webpack HMR")]),e._v(" "),t("ul",[t("li",[e._v("修改某个文件后，会自动以这个文件为入口重新 "),t("code",[e._v("build")]),e._v(" 一次，所有涉及到的依赖也都会被重新加载一遍")])])])]),e._v(" "),t("p",[e._v("所以 "),t("code",[e._v("Vite HMR")]),e._v(" 相比 "),t("code",[e._v("Webpack HMR")]),e._v(" 性能更好一些。")]),e._v(" "),t("h2",{attrs:{id:"打包-build"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包-build"}},[e._v("#")]),e._v(" 打包 build")]),e._v(" "),t("p",[t("code",[e._v("Vite")]),e._v(" 在生产模式下打包需要使用 "),t("code",[e._v("vite build")]),e._v(" 命令。")]),e._v(" "),t("p",[e._v("该命令内部使用 "),t("code",[e._v("Rollup")]),e._v(" 进行打包。")]),e._v(" "),t("p",[e._v("最终还是会把文件都提前编译并打包到一起。")]),e._v(" "),t("p",[e._v("对于代码切割的需求，"),t("code",[e._v("Vite")]),e._v(" 内部采用的是原生的**动态导入（"),t("code",[e._v("Dynamic import")]),e._v("）**的特性实现的，所以打包结果只能支持现代浏览器。")]),e._v(" "),t("p",[e._v("不过动态导入特性是有相应的 "),t("code",[e._v("Polyfill")]),e._v(" 的。")]),e._v(" "),t("h2",{attrs:{id:"打包-or-不打包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#打包-or-不打包"}},[e._v("#")]),e._v(" 打包 or 不打包")]),e._v(" "),t("p",[e._v("随着 Vite 的出现，引发了另外一个值得开发者思考的问题：究竟有没有必要打包应用？")]),e._v(" "),t("p",[e._v("以前，使用 Webpack 打包会把所有的模块打包到 bundle 里，这样打包的原因主要有两个：")]),e._v(" "),t("ul",[t("li",[e._v("浏览器环境并不支持模块化\n"),t("ul",[t("li",[e._v("随着现代浏览器对 ES 标准支持的逐渐完善，这个问题已经慢慢不存在了。")]),e._v(" "),t("li",[e._v("现阶段绝大多数浏览器都支持 ES Module 特性。")])])]),e._v(" "),t("li",[e._v("零散的模块文件会产生大量的 HTTP 请求\n"),t("ul",[t("li",[e._v("HTTP 2 多路复用的特性，减少了网络请求次数。")])])])]),e._v(" "),t("h3",{attrs:{id:"浏览器对-es-module-的支持"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器对-es-module-的支持"}},[e._v("#")]),e._v(" 浏览器对 ES Module 的支持")]),e._v(" "),t("ul",[t("li",[e._v("除了 IE 的现代浏览器基本都支持 ES Module。")]),e._v(" "),t("li",[e._v("如果项目需要兼容 IE，需要使用以前的打包方式。")])]),e._v(" "),t("p",[t("img",{attrs:{src:_(479),alt:"notes"}})])])}),[],!1,null,null,null);v.default=s.exports}}]);